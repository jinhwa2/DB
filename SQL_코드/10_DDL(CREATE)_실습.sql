/*****    CREATE TABLE 실습    *****/

-- 고객 테이블 CUSTOMER
CREATE TABLE CUSTOMER (
CUSTOMER_ID NUMBER(10,0)  PRIMARY KEY,
CUSTOMER_NAME VARCHAR2(100)  NOT NULL,
CUSTOMER_EMAIL VARCHAR2(100) CONSTRAINT C_E_U UNIQUE,
CUSTOMER_PHONE VARCHAR2(20),
CUSTOMER_ADDRESS VARCHAR2(255) ,

CONSTRAINT C_P_U_UNIQUE UNIQUE (CUSTOMER_PHONE)
);

COMMENT ON COLUMN "CUSTOMER".CUSTOMER_ID IS '고객아이디';  --주석작성
COMMENT ON COLUMN "CUSTOMER".CUSTOMER_NAME IS '고객이름';  --주석작성
COMMENT ON COLUMN "CUSTOMER".CUSTOMER_EMAIL IS '고객이메일;   --주석작성
COMMENT ON COLUMN "CUSTOMER".CUSTOMER_PHONEIS IS '고객전화번호';  --주석작성
COMMENT ON COLUMN "CUSTOMER".CUSTOMER_ADDRESS IS'고객주소 '; --주석작성
/**
ORA-01780: string literal required
01780. 00000 -  "string literal required"
->큰 따옴 표 문제
**/

--PROUDUC 테이블 생성
CREATE TABLE PROUDUCT (
PRODUCT_ID NUMBER(10,0) PRIMARY KEY,
PRODUCT_NAME VARCHAR2(100) NOT NULL,
PRODUCT_PRICE NUMBER(10,2) NOT NULL,
PRODUCT_DESC VARCHAR2(200) CONSTRAINT P_D_U UNIQUE
);
COMMIT;
--PRODUCT 값 추가
INSERT INTO PROUDUCT
VALUES(1,'아메리카노', 3000,  '신선한 원두로 만든 아메리카노');

INSERT INTO PROUDUCT
VALUES(2, '카페라떼', 2500 ,'부드러운 우유가 들어간 라떼');

INSERT INTO PROUDUCT
VALUES(3,'카푸치노', 3500,' 진한 커피와 거품이 어우러진 카푸치노');

INSERT INTO PROUDUCT
VALUES(4, '카라멜마키아토', 4000,' 달콤한 카라멜 시럽이 들어간 마키아노');

--FOOD_COMPANY TABLE 생성
CREATE TABLE FOOD_COMPANY(
       COMPANY_ID            NUMBER(10,0) PRIMARY KEY,  --회사 ID기본키
       COMPANY_NAME       VARCHAR2(100) NOT NULL,   --회사이름(NULL 불가)
       COMPANY_ADDRESS VARCHAR2(255),                   --회사주소
       COMPANY_PHONE     VARCHAR2(20)                     --회사전화번호

);

--> Table FOOD_COMPANY이(가) 생성되었습니다.

--SNACKS 테이블 생명
CREATE TABLE SNACKS (
SNACK_ID NUMBER(10,0) PRIMARY KEY,     --과자 ID(기본키)
SNACK_NAME VARCHAR2(100) NOT NULL,    --과자이름(NULL불가)
PRICE NUMBER(10,2) NOT NULL,                  --가격(NULL 불가)
COMPANY_ID NUMBER(10,0),  --> 핵심포인트

CONSTRAINT FK_COMPANY FOREIGN KEY(COMPANY_ID)
REFERENCES  FOOD_COMPANY(COMPANY_ID)
ON DELETE CASCADE    -- 부모 삭제시 자식까지 삭제해줘
-- FOOD_COMPANY 회사 ID ON DELETE CASCADE    -- 부모 삭제시 자식까지 삭제해줘

);

--> ORA-00904:

-----> 부모에서 COMPANY_ID 자식에서도  COMㅡ

--SNACKS 테이블 생명
CREATE TABLE SNACKS1 (
SNACK_ID NUMBER(10,0) PRIMARY KEY,     --과자 ID(기본키)
SNACK_NAME VARCHAR2(100) NOT NULL,    --과자이름(NULL불가)
PRICE NUMBER(10,2) NOT NULL,                  --가격(NULL 불가)
CCCCCCCCC NUMBER(10,0),  --> 핵심포인트

CONSTRAINT FK_COMPAN1 FOREIGN KEY(CCCCCCCCC)
REFERENCES  FOOD_COMPANY(COMPANY_ID)
ON DELETE CASCADE    -- 부모 삭제시 자식까지 삭제해줘
-- FOOD_COMPANY 회사 ID ON DELETE CASCADE    -- 부모 삭제시 자식까지 삭제해줘

);


CREATE TABLE SNACKS2 (
SNACK_ID NUMBER(10,0) PRIMARY KEY,     --과자 ID(기본키)
SNACK_NAME VARCHAR2(100) NOT NULL,    --과자이름(NULL불가)
PRICE NUMBER(10,2) NOT NULL,                  --가격(NULL 불가)
AAAAAA NUMBER(10,0),  --> 핵심포인트

CONSTRAINT FK_COMPANY2 FOREIGN KEY(AAAAAA)
REFERENCES  FOOD_COMPANY(COMPANY_ID)
ON DELETE CASCADE    -- 부모 삭제시 자식까지 삭제해줘
-- FOOD_COMPANY 회사 ID ON DELETE CASCADE    -- 부모 삭제시 자식까지 삭제해줘

);


CREATE TABLE SNACKS3 (
SNACK_ID NUMBER(10,0) PRIMARY KEY,     --과자 ID(기본키)
SNACK_NAME VARCHAR2(100) NOT NULL,    --과자이름(NULL불가)
PRICE NUMBER(10,2) NOT NULL,                  --가격(NULL 불가)
ABCDEF NUMBER(10,0),  --> 핵심포인트

CONSTRAINT FK_COMPANY3 FOREIGN KEY(ABCDEF)
REFERENCES  FOOD_COMPANY(COMPANY_ID)
ON DELETE CASCADE    -- 부모 삭제시 자식까지 삭제해줘
-- FOOD_COMPANY 회사 ID ON DELETE CASCADE    -- 부모 삭제시 자식까지 삭제해줘

);

--> ABCDEF FOREIGN KEY 키를 참조할 변수명
----> 참조할 변수명 FK_COMPANY3 규칙명 작성해주는데 규칙명은 모든 테이블 합쳐서 동일한 이름을 쓸수 없음

-- 테이블 생성 DRINK_COMPANY(
-- DRINK_ID NUMBER 10,0 기본키
-- DRINK_NAME VARCHAR2(100) NOT NULL
-- DRINK_PHONE VARCHAR2(20)









